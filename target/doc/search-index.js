var searchIndex = JSON.parse('{\
"kat":{"doc":"Testing framework for known answer tests.","t":[24,16,24,8,8,8,14,14,10,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,11,10,10,10,10,10,10,14,14,14,14,14,14,14,14,14,14,14,14,14,11,11,14,14,14,0,3,6,6,6,6,6,12,11,11,11,11,11,11,11,11],"n":["DeriveTable","Error","__DeriveDeserialize","__Deserialize","__DeserializeOwned","__Deserializer","__generate_impl_deserialize","__generate_impl_deserialize","deserialize","deserialize_any","deserialize_bool","deserialize_byte_buf","deserialize_bytes","deserialize_char","deserialize_enum","deserialize_f32","deserialize_f64","deserialize_i128","deserialize_i128","deserialize_i16","deserialize_i32","deserialize_i64","deserialize_i8","deserialize_identifier","deserialize_ignored_any","deserialize_map","deserialize_newtype_struct","deserialize_option","deserialize_seq","deserialize_str","deserialize_string","deserialize_struct","deserialize_tuple","deserialize_tuple_struct","deserialize_u128","deserialize_u128","deserialize_u16","deserialize_u32","deserialize_u64","deserialize_u8","deserialize_unit","deserialize_unit_struct","global","impl_deserialize_from_deserializable","impl_deserialize_from_deserializable","impl_deserialize_from_toml_bool","impl_deserialize_from_toml_bool","impl_deserialize_from_toml_date","impl_deserialize_from_toml_date","impl_deserialize_from_toml_float","impl_deserialize_from_toml_float","impl_deserialize_from_toml_int","impl_deserialize_from_toml_int","impl_deserialize_from_toml_string","impl_deserialize_from_toml_string","is_human_readable","is_human_readable","kat_cfg","run","test","types","TomlArray","TomlBool","TomlDate","TomlFloat","TomlInt","TomlString","array","borrow","borrow_mut","deserialize","from","into","try_from","try_into","type_id"],"q":["kat","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","kat::types","","","","","","","","","","","","","",""],"d":["Type to generate a table from a struct","The error type that can be returned if some error occurs …","private. should not be used directly","A <strong>data structure</strong> that can be deserialized from any data …","A data structure that can be deserialized without …","A <strong>data format</strong> that can deserialize any data structure …","private. should not be used directly","private. should not be used directly","Deserialize this value from the given Serde deserializer.","Require the <code>Deserializer</code> to figure out how to drive the …","Hint that the <code>Deserialize</code> type is expecting a <code>bool</code> value.","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a byte array …","Hint that the <code>Deserialize</code> type is expecting a <code>char</code> value.","Hint that the <code>Deserialize</code> type is expecting an enum value …","Hint that the <code>Deserialize</code> type is expecting a <code>f32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>f64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i16</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i32</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i64</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>i8</code> value.","Hint that the <code>Deserialize</code> type is expecting the name of a …","Hint that the <code>Deserialize</code> type needs to deserialize a …","Hint that the <code>Deserialize</code> type is expecting a map of …","Hint that the <code>Deserialize</code> type is expecting a newtype …","Hint that the <code>Deserialize</code> type is expecting an optional …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a string value …","Hint that the <code>Deserialize</code> type is expecting a struct with …","Hint that the <code>Deserialize</code> type is expecting a sequence of …","Hint that the <code>Deserialize</code> type is expecting a tuple struct …","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting an <code>u128</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u16</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u32</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u64</code> value.","Hint that the <code>Deserialize</code> type is expecting a <code>u8</code> value.","Hint that the <code>Deserialize</code> type is expecting a unit value.","Hint that the <code>Deserialize</code> type is expecting a unit struct …","Defines the global variables inside the test file.","Generate Deserialize trait for any type that is …","Generate Deserialize trait for any type that is …","Generate Deserialize trait for any type that is …","Generate Deserialize trait for any type that is …","Generate Deserialize trait for any type that is …","Generate Deserialize trait for any type that is …","Generate Deserialize trait for any type that is …","Generate Deserialize trait for any type that is …","Generate Deserialize trait for any type that is …","Generate Deserialize trait for any type that is …","Generate Deserialize trait for any type that is …","Generate Deserialize trait for any type that is …","Determine whether <code>Deserialize</code> implementations should …","Determine whether <code>Deserialize</code> implementations should …","Configure the test files location.","Runs the tests.","Defines the test specific variables inside the test file.","Deserializable types","Type to deserialize a single value-type toml Array from","Type to deserialize a toml Bool from","Type to deserialize a toml Datetime from","Type to deserialize a toml Float from","Type to deserialize a toml Int from","Type to deserialize a toml String from","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","",""],"i":[0,1,0,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3],"f":[null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],[[["usize",0]],["result",4]],[[["str",0],["usize",0]],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["str",0]],["result",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["result",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]]],"p":[[8,"__Deserializer"],[8,"__Deserialize"],[3,"TomlArray"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};